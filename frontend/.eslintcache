[{"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\index.js":"1","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\App.js":"2","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\reportWebVitals.js":"3","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\router\\index.js":"4","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\payment.js":"5","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\purchase.js":"6","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\contact.js":"7","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\serverinfo.js":"8","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\Auth\\login.js":"9","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\profile.js":"10","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\Auth\\register.js":"11","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\index.js":"12","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\index.js":"13","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\textarea.js":"14","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\button.js":"15","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\input.js":"16","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\action\\action.js":"17","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\gethash.js":"18","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\period.js":"19","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\gamedata.js":"20","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\mopacks.js":"21","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\location.js":"22","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\index.js":"23","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Image\\index.js":"24","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Paypal\\index.js":"25","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\Card\\backgroundCard.js":"26","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\Card\\gameCard.js":"27","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\footer.js":"28","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\header.js":"29","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\index.js":"30","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Paypal\\PayButtons.js":"31","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\manager.js":"32","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\getlocation.js":"33"},{"size":552,"mtime":1687208285951,"results":"34","hashOfConfig":"35"},{"size":684,"mtime":1687901123900,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1687208285954,"results":"37","hashOfConfig":"35"},{"size":1065,"mtime":1687288051927,"results":"38","hashOfConfig":"35"},{"size":10043,"mtime":1688185084131,"results":"39","hashOfConfig":"35"},{"size":4932,"mtime":1688560684424,"results":"40","hashOfConfig":"35"},{"size":2546,"mtime":1687539085710,"results":"41","hashOfConfig":"35"},{"size":21413,"mtime":1688665871285,"results":"42","hashOfConfig":"35"},{"size":2927,"mtime":1688660356988,"results":"43","hashOfConfig":"35"},{"size":4982,"mtime":1688669089524,"results":"44","hashOfConfig":"35"},{"size":3951,"mtime":1688616756159,"results":"45","hashOfConfig":"35"},{"size":3773,"mtime":1688560729636,"results":"46","hashOfConfig":"35"},{"size":382,"mtime":1687208285950,"results":"47","hashOfConfig":"35"},{"size":471,"mtime":1687208285948,"results":"48","hashOfConfig":"35"},{"size":1056,"mtime":1688116301881,"results":"49","hashOfConfig":"35"},{"size":686,"mtime":1687540473772,"results":"50","hashOfConfig":"35"},{"size":1985,"mtime":1687291833826,"results":"51","hashOfConfig":"35"},{"size":10530,"mtime":1687208285956,"results":"52","hashOfConfig":"35"},{"size":195,"mtime":1687208285946,"results":"53","hashOfConfig":"35"},{"size":3198,"mtime":1688560900695,"results":"54","hashOfConfig":"35"},{"size":1618,"mtime":1687208285945,"results":"55","hashOfConfig":"35"},{"size":24622,"mtime":1687901428637,"results":"56","hashOfConfig":"35"},{"size":468,"mtime":1687208285947,"results":"57","hashOfConfig":"35"},{"size":728,"mtime":1687387659659,"results":"58","hashOfConfig":"35"},{"size":709,"mtime":1687893462022,"results":"59","hashOfConfig":"35"},{"size":876,"mtime":1687594759537,"results":"60","hashOfConfig":"35"},{"size":1603,"mtime":1687392667783,"results":"61","hashOfConfig":"35"},{"size":346,"mtime":1687208285949,"results":"62","hashOfConfig":"35"},{"size":3629,"mtime":1688616554068,"results":"63","hashOfConfig":"35"},{"size":774,"mtime":1687368276603,"results":"64","hashOfConfig":"35"},{"size":1830,"mtime":1687893189793,"results":"65","hashOfConfig":"35"},{"size":8849,"mtime":1688178574937,"results":"66","hashOfConfig":"35"},{"size":3435,"mtime":1688366296634,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"8o09gm",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\index.js",[],["141","142"],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\App.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\reportWebVitals.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\router\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\payment.js",["143","144"],"import styled from \"styled-components\";\r\nimport { Column, Row } from \"../components/Element\";\r\nimport Button from \"../components/Element/button\";\r\nimport Paypal from \"../components/Paypal\";\r\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport getHash from \"../utills/gethash\";\r\nimport { getServiceApi, serviceApi } from \"../action/action\";\r\nimport {\r\n  currentBlock,\r\n  getAmout,\r\n  getFluxAuth,\r\n  getPaidaddress,\r\n} from \"../utills/manager\";\r\nimport bitcoin from \"bitcoinjs-lib\";\r\nimport bitcoinMessage from \"bitcoinjs-message\";\r\nimport { getRandomNumber } from \"../utills\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ServerInfo = () => {\r\n  const location = useLocation();\r\n  const total =\r\n    location.state.flag === 1\r\n      ? location.state.data.price1\r\n      : location.state.data.price2;\r\n  const cpu =\r\n    location.state.flag === 1\r\n      ? location.state.data.cpu1\r\n      : location.state.data.cpu2;\r\n  const ram =\r\n    location.state.flag === 1\r\n      ? location.state.data.ram1\r\n      : location.state.data.ram2;\r\n  const hdd =\r\n    location.state.flag === 1\r\n      ? location.state.data.ssd1\r\n      : location.state.data.ssd2;\r\n  const checkout =\r\n    location.state.flag === 1\r\n      ? location.state.data.checkout1\r\n      : location.state.data.checkout2;\r\n  const zelID = \"1GLMJwdJEHySNwSqkC4iKpoBU215m7BkDk\";\r\n  const zelIDPrivatekey =\r\n    \"L3yGy6krc9VywytHCNEQfuMdpKrPzCfqW9knYAqCyGkKFxLnoXCE\";\r\n  const [transactiondata, setTransactiondata] = useState(\"\");\r\n  const [registerhash, setRegisterhash] = useState(\"\");\r\n  const [servicenumber, setServiceNumber] = useState();\r\n  const [flag, setFlag] = useState();\r\n  const initialData = async () => {\r\n    getFluxAuth();\r\n    const data = await getServiceApi();\r\n    console.log(data.serviceData.length);\r\n    setServiceNumber(data.serviceData.length);\r\n  };\r\n\r\n  useEffect(() => {\r\n    initialData();\r\n  }, []);\r\n\r\n  // const logoutdata = async () => {\r\n  //   await fetch(\"https://api.runonflux.io/zelid/logoutcurrentsession\", {\r\n  //     method: \"get\",\r\n  //     headers: {\r\n  //       zelidauth: {\r\n  //         zelid: zelID,\r\n  //         signature: signature,\r\n  //         loginPhrase: logininfo,\r\n  //       },\r\n  //     },\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((response) => console.log(response.data))\r\n  //     .catch((err) => console.log(err));\r\n  // };\r\n\r\n  const handleButtonClick = async () => {\r\n    const randomservice = Math.floor(Math.random() * 10000000 + 1);\r\n    const data = {\r\n      type: \"fluxappregister\",\r\n      version: 1,\r\n      appSpecification: {\r\n        version: 6,\r\n        name: `fluidservices${randomservice}`,\r\n        description: location.state.data.title,\r\n        owner: zelID,\r\n        compose: [\r\n          {\r\n            name: getRandomNumber(),\r\n            description: location.state.data.title,\r\n            repotag: location.state.data.repotag,\r\n            ports: location.state.data.port,\r\n            domains: location.state.data.domains,\r\n            environmentParameters: location.state.data.environmentParameters,\r\n            commands: [],\r\n            containerPorts: location.state.data.containerPorts,\r\n            containerData: location.state.data.containerData,\r\n            cpu: 0.1,\r\n            ram: 100,\r\n            hdd: 1,\r\n            tiered: false,\r\n          },\r\n        ],\r\n        instances: 3,\r\n        contacts: [],\r\n        geolocation: [\"acNA\"],\r\n        expire: 22000,\r\n      },\r\n      timestamp: new Date().getTime(),\r\n    };\r\n\r\n    const signatureinfo =\r\n      data.type +\r\n      data.version +\r\n      JSON.stringify(data.appSpecification) +\r\n      data.timestamp;\r\n    const keyPair = bitcoin.ECPair.fromWIF(zelIDPrivatekey);\r\n    const privateKey = keyPair.d.toBuffer(32);\r\n    const message = signatureinfo;\r\n    const signatureData = bitcoinMessage.sign(\r\n      message,\r\n      privateKey,\r\n      keyPair.compressed\r\n    );\r\n    console.log(signatureinfo);\r\n    data.signature = Buffer.from(signatureData).toString(\"base64\");\r\n    const registerhash = await fetch(\r\n      \"https://api.runonflux.io/apps/appregister\",\r\n      {\r\n        method: \"post\",\r\n        headers: {\r\n          zelidauth: localStorage.getItem(\"fluxauth\"),\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setRegisterhash(response.data);\r\n        return response.data;\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    const paidaddress = await getPaidaddress();\r\n\r\n    const amount = await getAmout(0.1, 100, 1, 22000);\r\n\r\n    console.log(registerhash, amount, paidaddress, \"paidaddress\");\r\n    const hashdata = await getHash(registerhash, amount, paidaddress);\r\n    console.log(hashdata);\r\n\r\n    const transaction = await fetch(\r\n      `https://api.runonflux.io/daemon/sendrawtransaction`,\r\n      {\r\n        method: \"post\",\r\n        headers: {\r\n          zelidauth: localStorage.getItem(\"fluxauth\"),\r\n        },\r\n        body: JSON.stringify({\r\n          hexstring: hashdata,\r\n          allowhighfees: false,\r\n        }),\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setTransactiondata(response.data);\r\n        toast(response.data);\r\n        return response.data;\r\n      })\r\n      .catch((err) => console.log(err));\r\n    if (transaction) {\r\n      const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n      // eslint-disable-next-line no-use-before-define\r\n      const currentBlockData = await currentBlock();\r\n      const serviceData = {\r\n        userid: authdata.user._id,\r\n        name: location.state.data.title,\r\n        currentBlockData: currentBlockData + 22000,\r\n        servername: `fluidservices${randomservice}`,\r\n      };\r\n      await serviceApi(serviceData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PaymentPart>\r\n        <Title>Billing</Title>\r\n        <PriceDetail>\r\n          <PriceDetailWrapper>\r\n            <Row>Threads</Row>\r\n            <Row>RAM</Row>\r\n            <Row>Storage</Row>\r\n          </PriceDetailWrapper>\r\n          <PriceDetailWrapper>\r\n            <Row>\r\n              <BoldTitle>{cpu}</BoldTitle>\r\n              Threads\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{ram}</BoldTitle> RAM\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{hdd}</BoldTitle> Storage\r\n            </Row>\r\n          </PriceDetailWrapper>\r\n          <PriceDetailWrapper>\r\n            <Row>\r\n              <BoldTitle>{cpu * 3.62}</BoldTitle>\r\n              Threads Cost USD\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{(ram * 0.19) / 1000}</BoldTitle>\r\n              RAM Cost USD\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{hdd * 0.1}</BoldTitle>\r\n              Storage Cost USD\r\n            </Row>\r\n          </PriceDetailWrapper>\r\n        </PriceDetail>\r\n        <CostDetail>\r\n          <Title>Total Cost</Title>\r\n          <BoldTitle>{total}</BoldTitle>\r\n        </CostDetail>\r\n\r\n        {flag === 1 ? (\r\n          <ButtonWrapper>\r\n            {registerhash ? (\r\n              registerhash.message ? (\r\n                <Column>\r\n                  <Button\r\n                    text=\"Complete Purchase\"\r\n                    width=\"180px\"\r\n                    radius=\"6px\"\r\n                    fweight=\"500\"\r\n                    color=\"black\"\r\n                    fsize=\"16px\"\r\n                    padding=\"15px\"\r\n                    onClick={handleButtonClick}\r\n                  />\r\n                  {registerhash.message}\r\n                </Column>\r\n              ) : (\r\n                <Button\r\n                  text={<>Please check {transactiondata} link</>}\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"black\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                />\r\n              )\r\n            ) : (\r\n              <Button\r\n                text=\"Complete Purchase\"\r\n                width=\"180px\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"black\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={handleButtonClick}\r\n              />\r\n            )}\r\n          </ButtonWrapper>\r\n        ) : (\r\n          <>\r\n            <Paypal cost=\"1\" setFlag={setFlag} />\r\n            <CoinbaseCommerceButton\r\n              styled\r\n              checkoutId=\"c632fe45-0566-48e8-9fdc-59c35b7234ca\"\r\n              // checkoutId={checkout}\r\n              // chargeId=\"CWL2LG2J\"\r\n              onChargeSuccess={(data) => {\r\n                console.log(data);\r\n                setFlag(1);\r\n              }}\r\n              onChargeFailure={(data) => {\r\n                console.log(data);\r\n              }}\r\n              onPaymentDetected={(data) => {\r\n                console.log(data);\r\n              }}\r\n              onModalClosed={() => {\r\n                console.log(\"Payment Cancelled\");\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n      </PaymentPart>\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled(Column)`\r\n  background-color: #313131;\r\n  width: 100%;\r\n  color: white;\r\n  padding: 20px;\r\n  gap: 20px;\r\n  height: 100vh;\r\n`;\r\nconst PaymentPart = styled(Column)`\r\n  gap: 30px;\r\n  margin-top: 100px;\r\n  max-width: 1000px;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n`;\r\n\r\nconst PriceDetail = styled(Row)`\r\n  gap: 20px;\r\n  width: 100%;\r\n  justify-content: center;\r\n`;\r\nconst CostDetail = styled(Row)`\r\n  gap: 20px;\r\n`;\r\nconst PriceDetailWrapper = styled(Column)`\r\n  width: 100%;\r\n  gap: 20px;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 20px;\r\n`;\r\nconst BoldTitle = styled.div`\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  margin-right: 10px;\r\n`;\r\nconst ButtonWrapper = styled(Row)`\r\n  justify-content: center;\r\n  gap: 20px;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\nexport default ServerInfo;\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\purchase.js",["145"],"import styled from \"styled-components\";\r\nimport { Column, DefaultImage, Row } from \"../components/Element\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Vector } from \"../components/Image\";\r\nimport Button from \"../components/Element/button\";\r\n\r\nconst Purchase = () => {\r\n  const location = useLocation();\r\n  const [selectedData, setSelectedData] = useState(location.state.data);\r\n  const navigate = useNavigate();\r\n  const handleClick = (data, flag) => {\r\n    navigate(\"/payment\", {\r\n      state: {\r\n        data: data,\r\n        flag: flag,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      {selectedData && (\r\n        <Banner>\r\n          <BannerImage src={selectedData.background} />\r\n          <BannerContainer>\r\n            <Card>\r\n              <CardPrice>\r\n                <PriceTitle>{selectedData.price1} </PriceTitle>\r\n                <PriceGeneral> / per month</PriceGeneral>\r\n              </CardPrice>\r\n              <CardTitle>\r\n                <CardTitleHeader>Budget</CardTitleHeader>{\" \"}\r\n              </CardTitle>\r\n              <CardDetail>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>vCore {selectedData.cpu1}</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>Ram {selectedData.ram1}GB</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>SSD {selectedData.ssd1}GB</>\r\n                </CardDetailItem>\r\n              </CardDetail>\r\n              <Button\r\n                text=\"GET STARTED\"\r\n                width=\"100%\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"black\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={() => handleClick(selectedData, 1)}\r\n              />\r\n            </Card>\r\n            <Card>\r\n              <CardPrice>\r\n                <PriceTitle>{selectedData.price2} </PriceTitle>\r\n                <PriceGeneral> / per month</PriceGeneral>\r\n              </CardPrice>\r\n              <CardTitle>\r\n                <CardTitleHeader>Performance</CardTitleHeader>{\" \"}\r\n              </CardTitle>\r\n              <CardDetail>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>vCore {selectedData.cpu2}</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>Ram {selectedData.ram2}GB</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>SSD {selectedData.ssd2}GB</>\r\n                </CardDetailItem>\r\n              </CardDetail>\r\n              <Button\r\n                text=\"GET STARTED\"\r\n                width=\"100%\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"black\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={() => handleClick(selectedData, 2)}\r\n              />\r\n            </Card>\r\n          </BannerContainer>\r\n        </Banner>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled(Column)`\r\n  background-color: #313131;\r\n  width: 100%;\r\n  color: white;\r\n  height: 100vh;\r\n  @media screen and (max-width: 640px) {\r\n    height: 100%;\r\n  }\r\n`;\r\nconst Banner = styled(Column)`\r\n  width: 100%;\r\n  position: relative;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n`;\r\nconst BannerImage = styled(DefaultImage)`\r\n  position: absolute;\r\n  height: 100%;\r\n  mask-image: linear-gradient(#fff, transparent);\r\n  width: 100%;\r\n  object-position: top;\r\n  margin-top: 50px;\r\n  object-fit: cover;\r\n`;\r\nconst BannerContainer = styled(Row)`\r\n  height: 100%;\r\n  gap: 40px;\r\n  margin-top: 50px;\r\n  @media screen and (max-width: 640px) {\r\n    flex-direction: column;\r\n    margin-top: 100px;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Card = styled(Column)`\r\n  padding: 30px 20px;\r\n  gap: 40px;\r\n  background: rgb(30, 30, 30);\r\n  border-radius: 20px;\r\n  width: 300px;\r\n  height: 450px;\r\n  gap: 30px;\r\n  z-index: 1;\r\n  opacity: 0.7;\r\n  font-size: 14px;\r\n  justify-content: center;\r\n`;\r\nconst CardPrice = styled(Row)`\r\n  gap: 10px;\r\n  width: 100%;\r\n`;\r\nconst PriceTitle = styled.div`\r\n  font-weight: 700;\r\n  font-size: 50px;\r\n`;\r\nconst PriceGeneral = styled.div`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n`;\r\nconst CardTitle = styled(Column)`\r\n  gap: 20px;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n`;\r\nconst CardTitleHeader = styled.div`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\nconst CardDetail = styled(Column)`\r\n  gap: 20px;\r\n  width: 100%;\r\n  align-items: flex-start;\r\n`;\r\nconst CardDetailItem = styled(Row)`\r\n  gap: 20px;\r\n`;\r\nexport default Purchase;\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\contact.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\serverinfo.js",["146","147","148","149"],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\Auth\\login.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\profile.js",["150","151"],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\Auth\\register.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\textarea.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\button.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\input.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\action\\action.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\gethash.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\period.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\gamedata.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\mopacks.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\location.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Image\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Paypal\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\Card\\backgroundCard.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\Card\\gameCard.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\footer.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\header.js",["152"],"import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { Column, DefaultImage, Row } from \"../Element\";\r\nimport { BiMenu } from \"react-icons/bi\";\r\nimport { Logo } from \"../Image\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nlet items = [\r\n  {\r\n    href: \"/services\",\r\n    title: \"Services\",\r\n  },\r\n  {\r\n    href: \"/profile\",\r\n    title: \"Profile\",\r\n  },\r\n  {\r\n    href: \"/wiki\",\r\n    title: \"Wiki\",\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  const [mobileFlag, setMobileFlag] = useState(false);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const handleClick = () => {\r\n    navigate(\"/\");\r\n  };\r\n  const handleChangePath = (item) => {};\r\n  console.log(location.pathname);\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <DefaultImage src={Logo} onClick={handleClick} />\r\n        <ItemWrapper>\r\n          {items?.map((item, key) =>\r\n            location.pathname === item.href ? (\r\n              <ItemContent href={item.href} key={key} flag=\"1\">\r\n                {item.title}\r\n              </ItemContent>\r\n            ) : (\r\n              <ItemContent href={item.href} key={key}>\r\n                {item.title}\r\n              </ItemContent>\r\n            )\r\n          )}\r\n        </ItemWrapper>\r\n        <ItemContent href=\"/login\">\r\n          <DefaultImage src=\"https://minotar.net/helm/MHF_Steve/24.png\" />\r\n          <>Login</>\r\n        </ItemContent>\r\n      </Container>\r\n\r\n      <MobileContainer>\r\n        <MenuDiv>\r\n          <BiMenu onClick={() => setMobileFlag(!mobileFlag)}></BiMenu>\r\n        </MenuDiv>\r\n\r\n        <MobileMenu flag={mobileFlag}>\r\n          {items.map((item, key) => (\r\n            <ItemContent href={item.href} key={key}>\r\n              {item.title}\r\n            </ItemContent>\r\n          ))}\r\n        </MobileMenu>\r\n      </MobileContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\nconst ItemWrapper = styled(Row)`\r\n  position: relative;\r\n  @media screen and (max-width: 767px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Container = styled(Row)`\r\n  justify-content: space-between;\r\n  position: fixed;\r\n  z-index: 3;\r\n  width: 100%;\r\n  img {\r\n    width: 120px;\r\n    height: 64px;\r\n    margin-right: 68px;\r\n  }\r\n  background-color: #2f2f2f;\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst MobileMenu = styled(Column)`\r\n  display: ${(props) => (props.flag === false ? \"none\" : \"flex\")};\r\n  max-height: ${(props) => (props.flag === false ? 0 : \"300px\")};\r\n  transition: all 0.3s;\r\n  background-color: rgba(16, 16, 16, 0.95);\r\n  width: 100%;\r\n`;\r\n\r\nconst MobileContainer = styled(Column)`\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 10;\r\n  width: 100%;\r\n  @media screen and (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    background: linear-gradient(90deg, #077d09, #0e400d);\r\n    line-height: 64px;\r\n  }\r\n`;\r\n\r\nconst MenuDiv = styled(Row)`\r\n  background-color: rgba(16, 16, 16, 0.95);\r\n  line-height: 64px;\r\n  padding: 10px;\r\n  svg {\r\n    /* transform: scale(2); */\r\n    color: white;\r\n    font-size: 40px;\r\n  }\r\n  z-index: 1;\r\n`;\r\n\r\nconst ItemContent = styled.a`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  line-height: 64px;\r\n  text-align: center;\r\n  min-width: 10vw;\r\n  background: ${(props) => props.flag && \"rgba(0, 0, 0, 0.3)\"};\r\n  :hover {\r\n    background: rgba(0, 0, 0, 0.3);\r\n    height: 100%;\r\n  }\r\n  img {\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 200px;\r\n    vertical-align: middle;\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Paypal\\PayButtons.js",["153"],"import { useEffect } from \"react\";\r\nimport { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\r\nconst ButtonWrapper = ({ currency, showSpinner, cost, setFlag }) => {\r\n  // usePayPalScriptReducer can be use only inside children of PayPalScriptProviders\r\n  // This is the main reason to wrap the PayPalButtons in a new component\r\n  const [{ options, isPending }, dispatch] = usePayPalScriptReducer();\r\n  const amount = cost;\r\n  const style = { layout: \"vertical\" };\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"resetOptions\",\r\n      value: {\r\n        ...options,\r\n        currency: currency,\r\n      },\r\n    });\r\n  }, [currency, showSpinner]);\r\n\r\n  return (\r\n    <>\r\n      {showSpinner && isPending && <div className=\"spinner\" />}\r\n      <PayPalButtons\r\n        style={style}\r\n        disabled={false}\r\n        forceReRender={[amount, currency, style]}\r\n        fundingSource={undefined}\r\n        createOrder={(data, actions) => {\r\n          return actions.order\r\n            .create({\r\n              purchase_units: [\r\n                {\r\n                  amount: {\r\n                    currency_code: currency,\r\n                    value: amount,\r\n                  },\r\n                },\r\n              ],\r\n            })\r\n            .then((orderId) => {\r\n              // Your code here after create the order\r\n              return orderId;\r\n            });\r\n        }}\r\n        onApprove={function (data, actions) {\r\n          return actions.order.capture().then(function (details) {\r\n            const name = details.payer.name.given_name;\r\n            alert(`Transaction completed by ${name}`);\r\n            setFlag(1);\r\n            console.log(data);\r\n            // Your code here after capture the order\r\n          });\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ButtonWrapper;\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\manager.js",["154"],"import bitcoin from \"bitcoinjs-lib\";\r\nimport bitcoinMessage from \"bitcoinjs-message\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getUserService } from \"../action/action\";\r\nimport getHash from \"./gethash\";\r\nconst handleStartClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/appstart/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleStopClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/appstop/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data))\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleReinstallClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/appremove/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.text())\r\n    .then((response) => {\r\n      const jsonArray = `[${response.replace(/}{/g, \"},{\")}]`;\r\n      JSON.parse(jsonArray).map((item) => {\r\n        toast.success(item.status);\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleRedeployClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/redeploy/${server}/false/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleHardRedeployClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/redeploy/${server}/true/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst handleRestartClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/apprestart/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getFluxAuth = async () => {\r\n  const zelID = \"1GLMJwdJEHySNwSqkC4iKpoBU215m7BkDk\";\r\n  const zelIDPrivatekey =\r\n    \"L3yGy6krc9VywytHCNEQfuMdpKrPzCfqW9knYAqCyGkKFxLnoXCE\";\r\n  const logininfo = await fetch(\"https://api.runonflux.io/id/loginphrase\", {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data);\r\n\r\n  const keyPair = bitcoin.ECPair.fromWIF(zelIDPrivatekey);\r\n  const privateKey = keyPair.d.toBuffer(32);\r\n  // const privateKey = keyPair.privateKey;\r\n  const message = logininfo;\r\n  const signature = bitcoinMessage.sign(\r\n    message,\r\n    privateKey,\r\n    keyPair.compressed\r\n  );\r\n  const alldata = {\r\n    zelid: zelID,\r\n    signature: signature,\r\n    loginPhrase: logininfo,\r\n  };\r\n  localStorage.setItem(\"fluxauth\", JSON.stringify(alldata));\r\n};\r\nconst getPaidaddress = async () => {\r\n  return await fetch(`https://api.runonflux.io/apps/deploymentinformation`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data.address)\r\n    .catch((err) => console.log(err));\r\n};\r\nconst getIpaddress = async (servername) => {\r\n  console.log(servername);\r\n  return await fetch(`https://api.runonflux.io/apps/location/${servername}`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getbenchmarks = async () => {\r\n  return await fetch(`https://api.runonflux.io/benchmark/getbenchmarks`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\nconst getAmout = async (cpu, ram, hdd, expire) => {\r\n  const zelID = \"1GLMJwdJEHySNwSqkC4iKpoBU215m7BkDk\";\r\n  const data = {\r\n    version: 6,\r\n    name: `cubehostings`,\r\n    description: \"server\",\r\n    owner: zelID,\r\n    compose: [\r\n      {\r\n        name: \"wickedsensation\",\r\n        description: \"server\",\r\n        repotag: \"wickedsensation/stoneblock3:1.6.1\",\r\n        ports: [39097, 39098],\r\n        domains: [\"\", \"\"],\r\n        environmentParameters: [],\r\n        commands: [],\r\n        containerPorts: [25565, 22],\r\n        containerData: \"/data/world  s:/data/backups\",\r\n        cpu: cpu,\r\n        ram: ram,\r\n        hdd: hdd,\r\n        tiered: false,\r\n      },\r\n    ],\r\n    instances: 3,\r\n    contacts: [],\r\n    geolocation: [],\r\n    expire: expire,\r\n  };\r\n\r\n  return await fetch(`https://api.runonflux.io/apps/calculateprice`, {\r\n    method: \"post\",\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\nconst currentBlock = async () => {\r\n  return await fetch(`https://api.runonflux.io/daemon/getblockcount`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst sendrawTransaction = async (hashdata) => {\r\n  return await fetch(`https://api.runonflux.io/daemon/sendrawtransaction`, {\r\n    method: \"post\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n    body: JSON.stringify({\r\n      hexstring: hashdata,\r\n      allowhighfees: false,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getExpire = async (server) => {\r\n  const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n  const resdata = await getUserService({\r\n    userid: authdata.user._id,\r\n    servername: server,\r\n  });\r\n  const currentBlockData = await currentBlock();\r\n  return (\r\n    Math.round(\r\n      (resdata?.filterdata[0]?.currentBlockData - currentBlockData) / 1000\r\n    ) * 1000\r\n  );\r\n};\r\n\r\nconst handleUpdateServer = async (data) => {\r\n  const signatureinfo =\r\n    data.type +\r\n    data.version +\r\n    JSON.stringify(data.appSpecification) +\r\n    data.timestamp;\r\n  const zelIDPrivatekey =\r\n    \"L3yGy6krc9VywytHCNEQfuMdpKrPzCfqW9knYAqCyGkKFxLnoXCE\";\r\n  const keyPair = bitcoin.ECPair.fromWIF(zelIDPrivatekey);\r\n  const privateKey = keyPair.d.toBuffer(32);\r\n  const message = signatureinfo;\r\n  const signatureData = bitcoinMessage.sign(\r\n    message,\r\n    privateKey,\r\n    keyPair.compressed\r\n  );\r\n  data.signature = Buffer.from(signatureData).toString(\"base64\");\r\n  const updatehash = await fetch(\"https://api.runonflux.io/apps/appupdate\", {\r\n    method: \"post\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n  const paidaddress = await getPaidaddress();\r\n  const amount = await getAmout(\r\n    data.appSpecification.compose[0].cpu,\r\n    data.appSpecification.compose[0].ram,\r\n    data.appSpecification.compose[0].hdd,\r\n    data.appSpecification.expire\r\n  );\r\n  console.log(updatehash, amount, paidaddress, \"paidaddress\");\r\n\r\n  const hashdata = await getHash(updatehash, amount, paidaddress);\r\n\r\n  return await sendrawTransaction(hashdata);\r\n};\r\n\r\nconst getAppSpecification = async (server) => {\r\n  return await fetch(\r\n    `https://api.runonflux.io/apps/appspecifications/${server}`,\r\n    {\r\n      method: \"get\",\r\n      headers: {\r\n        zelidauth: localStorage.getItem(\"fluxauth\"),\r\n      },\r\n    }\r\n  )\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getFluxAllUserData = async () => {\r\n  const Fluxauth = JSON.parse(localStorage.getItem(\"fluxauth\"));\r\n  return await fetch(\r\n    `https://jetpackbridge.runonflux.io/api/v1/dapps.php?filter=&zelid=${\r\n      Fluxauth.zelid\r\n    }&signature=${Buffer.from(Fluxauth.signature).toString(\r\n      \"base64\"\r\n    )}&loginPhrase=${Fluxauth.loginPhrase}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport {\r\n  handleStartClick,\r\n  handleRestartClick,\r\n  handleHardRedeployClick,\r\n  handleRedeployClick,\r\n  handleReinstallClick,\r\n  handleStopClick,\r\n  getFluxAuth,\r\n  getPaidaddress,\r\n  getAmout,\r\n  getIpaddress,\r\n  currentBlock,\r\n  sendrawTransaction,\r\n  handleUpdateServer,\r\n  getAppSpecification,\r\n  getExpire,\r\n  getFluxAllUserData,\r\n  getbenchmarks,\r\n};\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\getlocation.js",["155"],"import { allcontinents, allcountries } from \"../assets/json/location\";\r\n\r\nconst compareString = (x, y) => {\r\n  let a = x.label.toUpperCase(),\r\n    b = y.label.toUpperCase();\r\n  return a == b ? 0 : a > b ? 1 : -1;\r\n};\r\n\r\nconst continentsOptions = (isNegative, possibleLocations) => {\r\n  console.log(isNegative, \"possibleLocations\", possibleLocations);\r\n  const continents = [\r\n    { value: isNegative ? \"ALL\" : \"ALL\", label: isNegative ? \"ALL\" : \"ALL\" },\r\n  ];\r\n  console.log(continents);\r\n  possibleLocations\r\n    .filter((options) => options.instances > (isNegative ? -1 : 3))\r\n    .forEach((location) => {\r\n      if (!location.value.includes(\"_\")) {\r\n        const existingContinent = allcontinents.find(\r\n          (continent) => continent.code === location.value\r\n        );\r\n        continents.push({\r\n          value: location.value,\r\n          label: existingContinent ? existingContinent.name : location.value,\r\n        });\r\n      }\r\n    });\r\n  return continents.sort(compareString);\r\n};\r\nconst countriesOptions = (continentCode, isNegative, possibleLocations) => {\r\n  const countries = [\r\n    { value: isNegative ? \"ALL\" : \"ALL\", label: isNegative ? \"ALL\" : \"ALL\" },\r\n  ];\r\n  possibleLocations\r\n    .filter((options) => options.instances > (isNegative ? -1 : 3))\r\n    .forEach((location) => {\r\n      if (\r\n        !location.value.split(\"_\")[2] &&\r\n        location.value.startsWith(`${continentCode}_`)\r\n      ) {\r\n        const existingCountry = allcountries.find(\r\n          (country) => country.code === location.value.split(\"_\")[1]\r\n        );\r\n        countries.push({\r\n          value: location.value.split(\"_\")[1],\r\n          label: existingCountry\r\n            ? existingCountry.name\r\n            : location.value.split(\"_\")[1],\r\n        });\r\n      }\r\n    });\r\n  return countries.sort(compareString);\r\n};\r\nconst regionsOptions = (\r\n  continentCode,\r\n  countryCode,\r\n  isNegative,\r\n  possibleLocations\r\n) => {\r\n  const regions = [\r\n    { value: isNegative ? \"ALL\" : \"ALL\", label: isNegative ? \"ALL\" : \"ALL\" },\r\n  ];\r\n  possibleLocations\r\n    .filter((options) => options.instances > (isNegative ? -1 : 3))\r\n    .forEach((location) => {\r\n      if (location.value.startsWith(`${continentCode}_${countryCode}_`)) {\r\n        regions.push({\r\n          value: location.value.split(\"_\")[2],\r\n          label: location.value.split(\"_\")[2],\r\n        });\r\n      }\r\n    });\r\n  return regions.sort(compareString);\r\n};\r\nconst getLocation = (geo) => {\r\n  const specifiedLocation = geo.slice(2);\r\n  const locations = specifiedLocation.split(\"_\");\r\n  const continentCode = locations[0];\r\n  const countryCode = locations[1];\r\n  const regionName = locations[2];\r\n  const continentExists = allcontinents.find(\r\n    (continent) => continent.code === continentCode\r\n  ) || { name: \"ALL\" };\r\n  const countryExists = allcountries.find(\r\n    (country) => country.code === countryCode\r\n  ) || { name: \"ALL\" };\r\n  console.log(continentExists, countryExists, regionName);\r\n  let text = \"\";\r\n  if (continentExists.name !== \"ALL\") {\r\n    if (continentExists) {\r\n      text = text + continentExists.name;\r\n    }\r\n    if (countryExists && countryExists.name !== \"ALL\") {\r\n      text = text + \" \" + countryExists.name;\r\n    }\r\n    if (regionName && regionName !== \"ALL\") {\r\n      text = text + \" \" + regionName;\r\n    }\r\n  } else {\r\n    text = \"\";\r\n  }\r\n  return text;\r\n};\r\nexport { continentsOptions, countriesOptions, regionsOptions, getLocation };\r\n",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":39,"column":9,"nodeType":"162","messageId":"163","endLine":39,"endColumn":17},{"ruleId":"160","severity":1,"message":"164","line":48,"column":10,"nodeType":"162","messageId":"163","endLine":48,"endColumn":23},{"ruleId":"160","severity":1,"message":"165","line":10,"column":24,"nodeType":"162","messageId":"163","endLine":10,"endColumn":39},{"ruleId":"160","severity":1,"message":"166","line":9,"column":3,"nodeType":"162","messageId":"163","endLine":9,"endColumn":16},{"ruleId":"160","severity":1,"message":"167","line":25,"column":18,"nodeType":"162","messageId":"163","endLine":25,"endColumn":30},{"ruleId":"160","severity":1,"message":"168","line":48,"column":10,"nodeType":"162","messageId":"163","endLine":48,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":317,"column":6,"nodeType":"171","endLine":317,"endColumn":8,"suggestions":"172"},{"ruleId":"160","severity":1,"message":"173","line":27,"column":11,"nodeType":"162","messageId":"163","endLine":27,"endColumn":23},{"ruleId":"169","severity":1,"message":"174","line":49,"column":6,"nodeType":"171","endLine":49,"endColumn":8,"suggestions":"175"},{"ruleId":"160","severity":1,"message":"176","line":30,"column":9,"nodeType":"162","messageId":"163","endLine":30,"endColumn":25},{"ruleId":"169","severity":1,"message":"177","line":18,"column":6,"nodeType":"171","endLine":18,"endColumn":29,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":38,"column":40,"nodeType":"181","messageId":"182","endLine":38,"endColumn":42},{"ruleId":"183","severity":1,"message":"184","line":6,"column":12,"nodeType":"185","messageId":"186","endLine":6,"endColumn":14},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'checkout' is assigned a value but never used.","Identifier","unusedVar","'servicenumber' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","'getbenchmarks' is defined but never used.","'createFilter' is defined but never used.","'priceData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getIpData', 'location.state.data.components', and 'location.state.data.description'. Either include them or remove the dependency array.","ArrayExpression",["189"],"'fluxuserdata' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["190"],"'handleChangePath' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'options'. Either include them or remove the dependency array.",["191"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [getIpData, location.state.data.components, location.state.data.description]",{"range":"198","text":"199"},"Update the dependencies array to be: [auth]",{"range":"200","text":"201"},"Update the dependencies array to be: [currency, dispatch, options, showSpinner]",{"range":"202","text":"203"},[10607,10609],"[getIpData, location.state.data.components, location.state.data.description]",[1628,1630],"[auth]",[645,668],"[currency, dispatch, options, showSpinner]"]