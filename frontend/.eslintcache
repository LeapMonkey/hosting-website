[{"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\index.js":"1","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\App.js":"2","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\reportWebVitals.js":"3","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\router\\index.js":"4","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\payment.js":"5","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\purchase.js":"6","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\contact.js":"7","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\serverinfo.js":"8","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\Auth\\login.js":"9","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\profile.js":"10","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\Auth\\register.js":"11","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\index.js":"12","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\index.js":"13","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\textarea.js":"14","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\button.js":"15","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\input.js":"16","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\action\\action.js":"17","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\gethash.js":"18","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\period.js":"19","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\gamedata.js":"20","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\mopacks.js":"21","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\location.js":"22","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\index.js":"23","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Image\\index.js":"24","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Paypal\\index.js":"25","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\Card\\backgroundCard.js":"26","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\Card\\gameCard.js":"27","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\footer.js":"28","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\header.js":"29","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\index.js":"30","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Paypal\\PayButtons.js":"31","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\manager.js":"32","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\getlocation.js":"33"},{"size":552,"mtime":1687208285951,"results":"34","hashOfConfig":"35"},{"size":684,"mtime":1687901123900,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1687208285954,"results":"37","hashOfConfig":"35"},{"size":1065,"mtime":1687288051927,"results":"38","hashOfConfig":"35"},{"size":9970,"mtime":1687982052473,"results":"39","hashOfConfig":"35"},{"size":5074,"mtime":1687837177641,"results":"40","hashOfConfig":"35"},{"size":2546,"mtime":1687539085710,"results":"41","hashOfConfig":"35"},{"size":17794,"mtime":1688066319573,"results":"42","hashOfConfig":"35"},{"size":2892,"mtime":1687286844436,"results":"43","hashOfConfig":"35"},{"size":3991,"mtime":1687987391388,"results":"44","hashOfConfig":"35"},{"size":3913,"mtime":1687286831415,"results":"45","hashOfConfig":"35"},{"size":3790,"mtime":1687388232905,"results":"46","hashOfConfig":"35"},{"size":382,"mtime":1687208285950,"results":"47","hashOfConfig":"35"},{"size":471,"mtime":1687208285948,"results":"48","hashOfConfig":"35"},{"size":1056,"mtime":1687208285947,"results":"49","hashOfConfig":"35"},{"size":686,"mtime":1687540473772,"results":"50","hashOfConfig":"35"},{"size":1985,"mtime":1687291833826,"results":"51","hashOfConfig":"35"},{"size":10530,"mtime":1687208285956,"results":"52","hashOfConfig":"35"},{"size":195,"mtime":1687208285946,"results":"53","hashOfConfig":"35"},{"size":3196,"mtime":1687837520234,"results":"54","hashOfConfig":"35"},{"size":1618,"mtime":1687208285945,"results":"55","hashOfConfig":"35"},{"size":24622,"mtime":1687901428637,"results":"56","hashOfConfig":"35"},{"size":468,"mtime":1687208285947,"results":"57","hashOfConfig":"35"},{"size":728,"mtime":1687387659659,"results":"58","hashOfConfig":"35"},{"size":709,"mtime":1687893462022,"results":"59","hashOfConfig":"35"},{"size":876,"mtime":1687594759537,"results":"60","hashOfConfig":"35"},{"size":1603,"mtime":1687392667783,"results":"61","hashOfConfig":"35"},{"size":346,"mtime":1687208285949,"results":"62","hashOfConfig":"35"},{"size":3043,"mtime":1687293159037,"results":"63","hashOfConfig":"35"},{"size":774,"mtime":1687368276603,"results":"64","hashOfConfig":"35"},{"size":1830,"mtime":1687893189793,"results":"65","hashOfConfig":"35"},{"size":8849,"mtime":1687985422492,"results":"66","hashOfConfig":"35"},{"size":2916,"mtime":1687982817807,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"8o09gm",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\index.js",[],["140","141"],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\App.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\reportWebVitals.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\router\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\payment.js",["142"],"import styled from \"styled-components\";\r\nimport { Column, Row } from \"../components/Element\";\r\nimport Button from \"../components/Element/button\";\r\nimport Paypal from \"../components/Paypal\";\r\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport getHash from \"../utills/gethash\";\r\nimport { getServiceApi, serviceApi } from \"../action/action\";\r\nimport {\r\n  currentBlock,\r\n  getAmout,\r\n  getFluxAuth,\r\n  getPaidaddress,\r\n} from \"../utills/manager\";\r\nimport bitcoin from \"bitcoinjs-lib\";\r\nimport bitcoinMessage from \"bitcoinjs-message\";\r\nimport { getRandomNumber } from \"../utills\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ServerInfo = () => {\r\n  const location = useLocation();\r\n  const total =\r\n    location.state.flag === 1\r\n      ? location.state.data.price1\r\n      : location.state.data.price2;\r\n  const cpu =\r\n    location.state.flag === 1\r\n      ? location.state.data.cpu1\r\n      : location.state.data.cpu2;\r\n  const ram =\r\n    location.state.flag === 1\r\n      ? location.state.data.ram1\r\n      : location.state.data.ram2;\r\n  const hdd =\r\n    location.state.flag === 1\r\n      ? location.state.data.ssd1\r\n      : location.state.data.ssd2;\r\n  const checkout =\r\n    location.state.flag === 1\r\n      ? location.state.data.checkout1\r\n      : location.state.data.checkout2;\r\n  const zelID = \"1GLMJwdJEHySNwSqkC4iKpoBU215m7BkDk\";\r\n  const zelIDPrivatekey =\r\n    \"L3yGy6krc9VywytHCNEQfuMdpKrPzCfqW9knYAqCyGkKFxLnoXCE\";\r\n  const [transactiondata, setTransactiondata] = useState(\"\");\r\n  const [registerhash, setRegisterhash] = useState(\"\");\r\n  const [servicenumber, setServiceNumber] = useState();\r\n  const [flag, setFlag] = useState();\r\n  const initialData = async () => {\r\n    getFluxAuth();\r\n    const data = await getServiceApi();\r\n    console.log(data.serviceData.length);\r\n    setServiceNumber(data.serviceData.length);\r\n  };\r\n\r\n  useEffect(() => {\r\n    initialData();\r\n  }, []);\r\n\r\n  // const logoutdata = async () => {\r\n  //   await fetch(\"https://api.runonflux.io/zelid/logoutcurrentsession\", {\r\n  //     method: \"get\",\r\n  //     headers: {\r\n  //       zelidauth: {\r\n  //         zelid: zelID,\r\n  //         signature: signature,\r\n  //         loginPhrase: logininfo,\r\n  //       },\r\n  //     },\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((response) => console.log(response.data))\r\n  //     .catch((err) => console.log(err));\r\n  // };\r\n\r\n  const handleButtonClick = async () => {\r\n    const data = {\r\n      type: \"fluxappregister\",\r\n      version: 1,\r\n      appSpecification: {\r\n        version: 6,\r\n        name: `cubehosting${servicenumber}`,\r\n        description: location.state.data.title,\r\n        owner: zelID,\r\n        compose: [\r\n          {\r\n            name: getRandomNumber(),\r\n            description: location.state.data.title,\r\n            repotag: location.state.data.repotag,\r\n            ports: location.state.data.port,\r\n            domains: location.state.data.domains,\r\n            environmentParameters: location.state.data.environmentParameters,\r\n            commands: [],\r\n            containerPorts: location.state.data.containerPorts,\r\n            containerData: location.state.data.containerData,\r\n            cpu: 0.1,\r\n            ram: 100,\r\n            hdd: 1,\r\n            tiered: false,\r\n          },\r\n        ],\r\n        instances: 3,\r\n        contacts: [],\r\n        geolocation: [\"acNA\"],\r\n        expire: 22000,\r\n      },\r\n      timestamp: new Date().getTime(),\r\n    };\r\n\r\n    const signatureinfo =\r\n      data.type +\r\n      data.version +\r\n      JSON.stringify(data.appSpecification) +\r\n      data.timestamp;\r\n    const keyPair = bitcoin.ECPair.fromWIF(zelIDPrivatekey);\r\n    const privateKey = keyPair.d.toBuffer(32);\r\n    const message = signatureinfo;\r\n    const signatureData = bitcoinMessage.sign(\r\n      message,\r\n      privateKey,\r\n      keyPair.compressed\r\n    );\r\n    console.log(signatureinfo);\r\n    data.signature = Buffer.from(signatureData).toString(\"base64\");\r\n    const registerhash = await fetch(\r\n      \"https://api.runonflux.io/apps/appregister\",\r\n      {\r\n        method: \"post\",\r\n        headers: {\r\n          zelidauth: localStorage.getItem(\"fluxauth\"),\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setRegisterhash(response.data);\r\n        return response.data;\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    const paidaddress = await getPaidaddress();\r\n\r\n    const amount = await getAmout(0.1, 100, 1, 22000);\r\n\r\n    console.log(registerhash, amount, paidaddress, \"paidaddress\");\r\n    const hashdata = await getHash(registerhash, amount, paidaddress);\r\n    console.log(hashdata);\r\n\r\n    const transaction = await fetch(\r\n      `https://api.runonflux.io/daemon/sendrawtransaction`,\r\n      {\r\n        method: \"post\",\r\n        headers: {\r\n          zelidauth: localStorage.getItem(\"fluxauth\"),\r\n        },\r\n        body: JSON.stringify({\r\n          hexstring: hashdata,\r\n          allowhighfees: false,\r\n        }),\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setTransactiondata(response.data);\r\n        toast(response.data);\r\n        return response.data;\r\n      })\r\n      .catch((err) => console.log(err));\r\n    if (transaction) {\r\n      const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n      // eslint-disable-next-line no-use-before-define\r\n      const currentBlockData = await currentBlock();\r\n      const serviceData = {\r\n        userid: authdata.user._id,\r\n        name: location.state.data.title,\r\n        currentBlockData: currentBlockData + 22000,\r\n        servername: `cubehosting${servicenumber}`,\r\n      };\r\n      await serviceApi(serviceData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PaymentPart>\r\n        <Title>Billing</Title>\r\n        <PriceDetail>\r\n          <PriceDetailWrapper>\r\n            <Row>Threads</Row>\r\n            <Row>RAM</Row>\r\n            <Row>Storage</Row>\r\n          </PriceDetailWrapper>\r\n          <PriceDetailWrapper>\r\n            <Row>\r\n              <BoldTitle>{cpu}</BoldTitle>\r\n              Threads\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{ram}</BoldTitle> RAM\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{hdd}</BoldTitle> Storage\r\n            </Row>\r\n          </PriceDetailWrapper>\r\n          <PriceDetailWrapper>\r\n            <Row>\r\n              <BoldTitle>{cpu * 3.62}</BoldTitle>\r\n              Threads Cost USD\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{(ram * 0.19) / 1000}</BoldTitle>\r\n              RAM Cost USD\r\n            </Row>\r\n            <Row>\r\n              <BoldTitle>{hdd * 0.1}</BoldTitle>\r\n              Storage Cost USD\r\n            </Row>\r\n          </PriceDetailWrapper>\r\n        </PriceDetail>\r\n        <CostDetail>\r\n          <Title>Total Cost</Title>\r\n          <BoldTitle>{total}</BoldTitle>\r\n        </CostDetail>\r\n\r\n        {flag === 1 ? (\r\n          <ButtonWrapper>\r\n            {registerhash ? (\r\n              registerhash.message ? (\r\n                <Column>\r\n                  <Button\r\n                    text=\"Complete Purchase\"\r\n                    width=\"180px\"\r\n                    radius=\"6px\"\r\n                    fweight=\"500\"\r\n                    color=\"black\"\r\n                    fsize=\"16px\"\r\n                    padding=\"15px\"\r\n                    onClick={handleButtonClick}\r\n                  />\r\n                  {registerhash.message}\r\n                </Column>\r\n              ) : (\r\n                <Button\r\n                  text={<>Please check {transactiondata} link</>}\r\n                  width=\"100%\"\r\n                  radius=\"6px\"\r\n                  fweight=\"500\"\r\n                  color=\"black\"\r\n                  fsize=\"16px\"\r\n                  padding=\"15px\"\r\n                />\r\n              )\r\n            ) : (\r\n              <Button\r\n                text=\"Complete Purchase\"\r\n                width=\"180px\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"black\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={handleButtonClick}\r\n              />\r\n            )}\r\n          </ButtonWrapper>\r\n        ) : (\r\n          <>\r\n            <Paypal cost=\"1\" setFlag={setFlag} />\r\n            <CoinbaseCommerceButton\r\n              styled\r\n              checkoutId=\"c632fe45-0566-48e8-9fdc-59c35b7234ca\"\r\n              // checkoutId={checkout}\r\n              // chargeId=\"CWL2LG2J\"\r\n              onChargeSuccess={(data) => {\r\n                console.log(data);\r\n                setFlag(1);\r\n              }}\r\n              onChargeFailure={(data) => {\r\n                console.log(data);\r\n              }}\r\n              onPaymentDetected={(data) => {\r\n                console.log(data);\r\n              }}\r\n              onModalClosed={() => {\r\n                console.log(\"Payment Cancelled\");\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n      </PaymentPart>\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled(Column)`\r\n  background-color: #313131;\r\n  width: 100%;\r\n  color: white;\r\n  padding: 20px;\r\n  gap: 20px;\r\n  height: 100vh;\r\n`;\r\nconst PaymentPart = styled(Column)`\r\n  gap: 30px;\r\n  margin-top: 100px;\r\n  max-width: 1000px;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n`;\r\n\r\nconst PriceDetail = styled(Row)`\r\n  gap: 20px;\r\n  width: 100%;\r\n  justify-content: center;\r\n`;\r\nconst CostDetail = styled(Row)`\r\n  gap: 20px;\r\n`;\r\nconst PriceDetailWrapper = styled(Column)`\r\n  width: 100%;\r\n  gap: 20px;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 20px;\r\n`;\r\nconst BoldTitle = styled.div`\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  margin-right: 10px;\r\n`;\r\nconst ButtonWrapper = styled(Row)`\r\n  justify-content: center;\r\n  gap: 20px;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\nexport default ServerInfo;\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\purchase.js",["143"],"import styled from \"styled-components\";\r\nimport { Column, DefaultImage, Row } from \"../components/Element\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Vector } from \"../components/Image\";\r\nimport Button from \"../components/Element/button\";\r\n\r\nconst Purchase = () => {\r\n  const location = useLocation();\r\n  const [selectedData, setSelectedData] = useState(location.state.data);\r\n  const navigate = useNavigate();\r\n  const handleClick = (data, flag) => {\r\n    navigate(\"/payment\", {\r\n      state: {\r\n        data: data,\r\n        flag: flag,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      {selectedData && (\r\n        <Banner>\r\n          <BannerImage src={selectedData.background} />\r\n          <BannerContainer>\r\n            <Card>\r\n              <CardPrice>\r\n                <PriceTitle>{selectedData.price1} </PriceTitle>\r\n                <PriceGeneral> / per month</PriceGeneral>\r\n              </CardPrice>\r\n              <CardTitle>\r\n                <CardTitleHeader>Budget</CardTitleHeader>{\" \"}\r\n                <>For Beginner Who Want To Scale Business Globally</>\r\n              </CardTitle>\r\n              <CardDetail>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>vCore {selectedData.cpu1}</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>Ram {selectedData.ram1}GB</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>SSD {selectedData.ssd1}GB</>\r\n                </CardDetailItem>\r\n              </CardDetail>\r\n              <Button\r\n                text=\"GET STARTED\"\r\n                width=\"100%\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"black\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={() => handleClick(selectedData, 1)}\r\n              />\r\n            </Card>\r\n            <Card>\r\n              <CardPrice>\r\n                <PriceTitle>{selectedData.price2} </PriceTitle>\r\n                <PriceGeneral> / per month</PriceGeneral>\r\n              </CardPrice>\r\n              <CardTitle>\r\n                <CardTitleHeader>Performance</CardTitleHeader>{\" \"}\r\n                <>For Beginner Who Want To Scale Business Globally</>\r\n              </CardTitle>\r\n              <CardDetail>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>vCore {selectedData.cpu2}</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>Ram {selectedData.ram2}GB</>\r\n                </CardDetailItem>\r\n                <CardDetailItem>\r\n                  <DefaultImage src={Vector} />\r\n                  <>SSD {selectedData.ssd2}GB</>\r\n                </CardDetailItem>\r\n              </CardDetail>\r\n              <Button\r\n                text=\"GET STARTED\"\r\n                width=\"100%\"\r\n                radius=\"6px\"\r\n                fweight=\"500\"\r\n                color=\"black\"\r\n                fsize=\"16px\"\r\n                padding=\"15px\"\r\n                onClick={() => handleClick(selectedData, 2)}\r\n              />\r\n            </Card>\r\n          </BannerContainer>\r\n        </Banner>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled(Column)`\r\n  background-color: #313131;\r\n  width: 100%;\r\n  color: white;\r\n  height: 100vh;\r\n  @media screen and (max-width: 640px) {\r\n    height: 100%;\r\n  }\r\n`;\r\nconst Banner = styled(Column)`\r\n  width: 100%;\r\n  position: relative;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n`;\r\nconst BannerImage = styled(DefaultImage)`\r\n  position: absolute;\r\n  height: 100%;\r\n  mask-image: linear-gradient(#fff, transparent);\r\n  width: 100%;\r\n  object-position: top;\r\n  margin-top: 50px;\r\n  object-fit: cover;\r\n`;\r\nconst BannerContainer = styled(Row)`\r\n  height: 100%;\r\n  gap: 40px;\r\n  margin-top: 50px;\r\n  @media screen and (max-width: 640px) {\r\n    flex-direction: column;\r\n    margin-top: 100px;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Card = styled(Column)`\r\n  padding: 30px 20px;\r\n  gap: 40px;\r\n  background: rgb(30, 30, 30);\r\n  border-radius: 20px;\r\n  width: 300px;\r\n  height: 450px;\r\n  gap: 30px;\r\n  z-index: 1;\r\n  opacity: 0.7;\r\n  font-size: 14px;\r\n  justify-content: center;\r\n`;\r\nconst CardPrice = styled(Row)`\r\n  gap: 10px;\r\n  width: 100%;\r\n`;\r\nconst PriceTitle = styled.div`\r\n  font-weight: 700;\r\n  font-size: 50px;\r\n`;\r\nconst PriceGeneral = styled.div`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n`;\r\nconst CardTitle = styled(Column)`\r\n  gap: 20px;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n`;\r\nconst CardTitleHeader = styled.div`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\nconst CardDetail = styled(Column)`\r\n  gap: 20px;\r\n  width: 100%;\r\n  align-items: flex-start;\r\n`;\r\nconst CardDetailItem = styled(Row)`\r\n  gap: 20px;\r\n`;\r\nexport default Purchase;\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\contact.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\serverinfo.js",["144","145"],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\Auth\\login.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\profile.js",["146"],"import styled from \"styled-components\";\r\nimport { Column, DefaultImage, Row } from \"../components/Element\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { getServiceApi } from \"../action/action\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ARK } from \"../components/Image\";\r\nimport { getFluxAllUserData, getFluxAuth } from \"../utills/manager\";\r\nimport { getLocation } from \"../utills/getlocation\";\r\n\r\nconst Profile = () => {\r\n  const [auth, setAuth] = useState(JSON.parse(localStorage.getItem(\"auth\")));\r\n  const [serviceData, setServiceData] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  const initialData = async () => {\r\n    const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n    setAuth(authdata.user);\r\n    const response = await getServiceApi();\r\n    const fluxalluser = await getFluxAllUserData();\r\n    const service = response.serviceData.filter(\r\n      (item) => item.userid === authdata.user._id\r\n    );\r\n    const fluxuserdata = fluxalluser?.filter((flux) =>\r\n      service?.some((item) => flux.name === item.servername)\r\n    );\r\n    console.log(fluxuserdata);\r\n    setServiceData(fluxuserdata);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      initialData();\r\n      getFluxAuth();\r\n    } else {\r\n      alert(\"please login\");\r\n    }\r\n  }, []);\r\n  const handleItemClick = (data) => {\r\n    navigate(\"/server\", {\r\n      state: {\r\n        data: data,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {auth && (\r\n        <>\r\n          <Banner>\r\n            <DefaultImage src={ARK} />\r\n            <BannerContainer>\r\n              <BannerTitle>{auth?.username}</BannerTitle>\r\n            </BannerContainer>\r\n          </Banner>\r\n          <WrapperContainer>\r\n            {serviceData &&\r\n              serviceData.map((item) => (\r\n                <UserServerGroup onClick={() => handleItemClick(item)}>\r\n                  <ColumnData>\r\n                    <DefaultTitle>Servers</DefaultTitle>\r\n                    <DefaultText>{item.name}</DefaultText>\r\n                  </ColumnData>\r\n                  <ColumnData>\r\n                    <DefaultTitle>End Date</DefaultTitle>\r\n                    <DefaultText>{item.expires_date}</DefaultText>\r\n                  </ColumnData>\r\n                  <ColumnData>\r\n                    <DefaultTitle>Location</DefaultTitle>\r\n                    <DefaultText>\r\n                      {getLocation(item.geolocation[0])}\r\n                    </DefaultText>\r\n                  </ColumnData>\r\n                </UserServerGroup>\r\n              ))}\r\n          </WrapperContainer>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled(Column)`\r\n  background-color: #313131;\r\n  width: 100%;\r\n  color: white;\r\n  height: 100vh;\r\n`;\r\nconst WrapperContainer = styled(Column)`\r\n  padding: 20px;\r\n  gap: 20px;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  max-width: 900px;\r\n  width: 100%;\r\n  max-height: 80vh;\r\n  overflow: auto;\r\n`;\r\n\r\nconst DefaultText = styled.div`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n`;\r\nconst DefaultTitle = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\nconst UserServerGroup = styled(Row)`\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background-color: #00000066;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst ColumnData = styled(Column)`\r\n  align-items: flex-start;\r\n  gap: 5px;\r\n`;\r\nconst Banner = styled(Column)`\r\n  width: 100%;\r\n  position: relative;\r\n  height: 32vh;\r\n  img {\r\n    position: absolute;\r\n    height: 100%;\r\n    mask-image: linear-gradient(#fff, transparent);\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\nconst BannerContainer = styled(Row)`\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n`;\r\nconst BannerTitle = styled.h1`\r\n  font-weight: 600;\r\n  color: #fff;\r\n  text-shadow: 2px 2px 1px #191919;\r\n  z-index: 2;\r\n  font-size: 32px;\r\n  margin-right: 50px;\r\n  margin-bottom: 50px;\r\n`;\r\nexport default Profile;\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\Auth\\register.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\pages\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\textarea.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\button.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\input.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\action\\action.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\gethash.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\period.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\gamedata.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\mopacks.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\assets\\json\\location.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Image\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Paypal\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\Card\\backgroundCard.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Element\\Card\\gameCard.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\footer.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Layout\\header.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\index.js",[],"F:\\work\\wickesensation\\hosting-website\\frontend\\src\\components\\Paypal\\PayButtons.js",["147"],"import { useEffect } from \"react\";\r\nimport { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\r\nconst ButtonWrapper = ({ currency, showSpinner, cost, setFlag }) => {\r\n  // usePayPalScriptReducer can be use only inside children of PayPalScriptProviders\r\n  // This is the main reason to wrap the PayPalButtons in a new component\r\n  const [{ options, isPending }, dispatch] = usePayPalScriptReducer();\r\n  const amount = cost;\r\n  const style = { layout: \"vertical\" };\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"resetOptions\",\r\n      value: {\r\n        ...options,\r\n        currency: currency,\r\n      },\r\n    });\r\n  }, [currency, showSpinner]);\r\n\r\n  return (\r\n    <>\r\n      {showSpinner && isPending && <div className=\"spinner\" />}\r\n      <PayPalButtons\r\n        style={style}\r\n        disabled={false}\r\n        forceReRender={[amount, currency, style]}\r\n        fundingSource={undefined}\r\n        createOrder={(data, actions) => {\r\n          return actions.order\r\n            .create({\r\n              purchase_units: [\r\n                {\r\n                  amount: {\r\n                    currency_code: currency,\r\n                    value: amount,\r\n                  },\r\n                },\r\n              ],\r\n            })\r\n            .then((orderId) => {\r\n              // Your code here after create the order\r\n              return orderId;\r\n            });\r\n        }}\r\n        onApprove={function (data, actions) {\r\n          return actions.order.capture().then(function (details) {\r\n            const name = details.payer.name.given_name;\r\n            alert(`Transaction completed by ${name}`);\r\n            setFlag(1);\r\n            console.log(data);\r\n            // Your code here after capture the order\r\n          });\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ButtonWrapper;\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\manager.js",["148"],"import bitcoin from \"bitcoinjs-lib\";\r\nimport bitcoinMessage from \"bitcoinjs-message\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getUserService } from \"../action/action\";\r\nimport getHash from \"./gethash\";\r\nconst handleStartClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/appstart/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleStopClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/appstop/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data))\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleReinstallClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/appremove/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.text())\r\n    .then((response) => {\r\n      const jsonArray = `[${response.replace(/}{/g, \"},{\")}]`;\r\n      JSON.parse(jsonArray).map((item) => {\r\n        toast.success(item.status);\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleRedeployClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/redeploy/${server}/false/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\nconst handleHardRedeployClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/redeploy/${server}/true/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst handleRestartClick = async (server) => {\r\n  await fetch(`https://api.runonflux.io/apps/apprestart/${server}/true`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => toast.success(response.data.message))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getFluxAuth = async () => {\r\n  const zelID = \"1GLMJwdJEHySNwSqkC4iKpoBU215m7BkDk\";\r\n  const zelIDPrivatekey =\r\n    \"L3yGy6krc9VywytHCNEQfuMdpKrPzCfqW9knYAqCyGkKFxLnoXCE\";\r\n  const logininfo = await fetch(\"https://api.runonflux.io/id/loginphrase\", {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data);\r\n\r\n  const keyPair = bitcoin.ECPair.fromWIF(zelIDPrivatekey);\r\n  const privateKey = keyPair.d.toBuffer(32);\r\n  // const privateKey = keyPair.privateKey;\r\n  const message = logininfo;\r\n  const signature = bitcoinMessage.sign(\r\n    message,\r\n    privateKey,\r\n    keyPair.compressed\r\n  );\r\n  const alldata = {\r\n    zelid: zelID,\r\n    signature: signature,\r\n    loginPhrase: logininfo,\r\n  };\r\n  localStorage.setItem(\"fluxauth\", JSON.stringify(alldata));\r\n};\r\nconst getPaidaddress = async () => {\r\n  return await fetch(`https://api.runonflux.io/apps/deploymentinformation`, {\r\n    method: \"get\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data.address)\r\n    .catch((err) => console.log(err));\r\n};\r\nconst getIpaddress = async (servername) => {\r\n  console.log(servername);\r\n  return await fetch(`https://api.runonflux.io/apps/location/${servername}`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getbenchmarks = async () => {\r\n  return await fetch(`https://api.runonflux.io/benchmark/getbenchmarks`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\nconst getAmout = async (cpu, ram, hdd, expire) => {\r\n  const zelID = \"1GLMJwdJEHySNwSqkC4iKpoBU215m7BkDk\";\r\n  const data = {\r\n    version: 6,\r\n    name: `cubehostings`,\r\n    description: \"server\",\r\n    owner: zelID,\r\n    compose: [\r\n      {\r\n        name: \"wickedsensation\",\r\n        description: \"server\",\r\n        repotag: \"wickedsensation/stoneblock3:1.6.1\",\r\n        ports: [39097, 39098],\r\n        domains: [\"\", \"\"],\r\n        environmentParameters: [],\r\n        commands: [],\r\n        containerPorts: [25565, 22],\r\n        containerData: \"/data/world  s:/data/backups\",\r\n        cpu: cpu,\r\n        ram: ram,\r\n        hdd: hdd,\r\n        tiered: false,\r\n      },\r\n    ],\r\n    instances: 3,\r\n    contacts: [],\r\n    geolocation: [],\r\n    expire: expire,\r\n  };\r\n\r\n  return await fetch(`https://api.runonflux.io/apps/calculateprice`, {\r\n    method: \"post\",\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\nconst currentBlock = async () => {\r\n  return await fetch(`https://api.runonflux.io/daemon/getblockcount`, {\r\n    method: \"get\",\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst sendrawTransaction = async (hashdata) => {\r\n  return await fetch(`https://api.runonflux.io/daemon/sendrawtransaction`, {\r\n    method: \"post\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n    body: JSON.stringify({\r\n      hexstring: hashdata,\r\n      allowhighfees: false,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getExpire = async (server) => {\r\n  const authdata = JSON.parse(localStorage.getItem(\"auth\"));\r\n  const resdata = await getUserService({\r\n    userid: authdata.user._id,\r\n    servername: server,\r\n  });\r\n  const currentBlockData = await currentBlock();\r\n  return (\r\n    Math.round(\r\n      (resdata?.filterdata[0]?.currentBlockData - currentBlockData) / 1000\r\n    ) * 1000\r\n  );\r\n};\r\n\r\nconst handleUpdateServer = async (data) => {\r\n  const signatureinfo =\r\n    data.type +\r\n    data.version +\r\n    JSON.stringify(data.appSpecification) +\r\n    data.timestamp;\r\n  const zelIDPrivatekey =\r\n    \"L3yGy6krc9VywytHCNEQfuMdpKrPzCfqW9knYAqCyGkKFxLnoXCE\";\r\n  const keyPair = bitcoin.ECPair.fromWIF(zelIDPrivatekey);\r\n  const privateKey = keyPair.d.toBuffer(32);\r\n  const message = signatureinfo;\r\n  const signatureData = bitcoinMessage.sign(\r\n    message,\r\n    privateKey,\r\n    keyPair.compressed\r\n  );\r\n  data.signature = Buffer.from(signatureData).toString(\"base64\");\r\n  const updatehash = await fetch(\"https://api.runonflux.io/apps/appupdate\", {\r\n    method: \"post\",\r\n    headers: {\r\n      zelidauth: localStorage.getItem(\"fluxauth\"),\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n  const paidaddress = await getPaidaddress();\r\n  const amount = await getAmout(\r\n    data.appSpecification.compose[0].cpu,\r\n    data.appSpecification.compose[0].ram,\r\n    data.appSpecification.compose[0].hdd,\r\n    data.appSpecification.expire\r\n  );\r\n  console.log(updatehash, amount, paidaddress, \"paidaddress\");\r\n\r\n  const hashdata = await getHash(updatehash, amount, paidaddress);\r\n\r\n  return await sendrawTransaction(hashdata);\r\n};\r\n\r\nconst getAppSpecification = async (server) => {\r\n  return await fetch(\r\n    `https://api.runonflux.io/apps/appspecifications/${server}`,\r\n    {\r\n      method: \"get\",\r\n      headers: {\r\n        zelidauth: localStorage.getItem(\"fluxauth\"),\r\n      },\r\n    }\r\n  )\r\n    .then((res) => res.json())\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getFluxAllUserData = async () => {\r\n  const Fluxauth = JSON.parse(localStorage.getItem(\"fluxauth\"));\r\n  return await fetch(\r\n    `https://jetpackbridge.runonflux.io/api/v1/dapps.php?filter=&zelid=${\r\n      Fluxauth.zelid\r\n    }&signature=${Buffer.from(Fluxauth.signature).toString(\r\n      \"base64\"\r\n    )}&loginPhrase=${Fluxauth.loginPhrase}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport {\r\n  handleStartClick,\r\n  handleRestartClick,\r\n  handleHardRedeployClick,\r\n  handleRedeployClick,\r\n  handleReinstallClick,\r\n  handleStopClick,\r\n  getFluxAuth,\r\n  getPaidaddress,\r\n  getAmout,\r\n  getIpaddress,\r\n  currentBlock,\r\n  sendrawTransaction,\r\n  handleUpdateServer,\r\n  getAppSpecification,\r\n  getExpire,\r\n  getFluxAllUserData,\r\n  getbenchmarks,\r\n};\r\n","F:\\work\\wickesensation\\hosting-website\\frontend\\src\\utills\\getlocation.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":39,"column":9,"nodeType":"155","messageId":"156","endLine":39,"endColumn":17},{"ruleId":"153","severity":1,"message":"157","line":10,"column":24,"nodeType":"155","messageId":"156","endLine":10,"endColumn":39},{"ruleId":"153","severity":1,"message":"158","line":11,"column":3,"nodeType":"155","messageId":"156","endLine":11,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":251,"column":6,"nodeType":"161","endLine":251,"endColumn":8,"suggestions":"162"},{"ruleId":"159","severity":1,"message":"163","line":38,"column":6,"nodeType":"161","endLine":38,"endColumn":8,"suggestions":"164"},{"ruleId":"159","severity":1,"message":"165","line":18,"column":6,"nodeType":"161","endLine":18,"endColumn":29,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":38,"column":40,"nodeType":"169","messageId":"170","endLine":38,"endColumn":42},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'checkout' is assigned a value but never used.","Identifier","unusedVar","'setSelectedData' is assigned a value but never used.","'getIpaddress' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getIpData'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has missing dependencies: 'dispatch' and 'options'. Either include them or remove the dependency array.",["175"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [getIpData]",{"range":"182","text":"183"},"Update the dependencies array to be: [auth]",{"range":"184","text":"185"},"Update the dependencies array to be: [currency, dispatch, options, showSpinner]",{"range":"186","text":"187"},[8322,8324],"[getIpData]",[1320,1322],"[auth]",[645,668],"[currency, dispatch, options, showSpinner]"]